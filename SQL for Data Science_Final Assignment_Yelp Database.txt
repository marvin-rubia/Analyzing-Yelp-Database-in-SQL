Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.


Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000 rows, 3 columns
ii. Business table = 10000 rows, 12 columns
iii. Category table = 10000 rows, 2 columns
iv. Checkin table = 10000 rows, 3 columns
v. elite_years table = 10000 rows, 2 columns
vi. friend table = 10000 rows, 2 columns
vii. hours table = 10000 rows, 2 columns
viii. photo table = 10000 rows, 4 columns
ix. review table = 10000 rows, 9 columns
x. tip table = 10000 rows, 5 columns
xi. user table = 10000 rows, 20 columns
	
2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000 
viii. Tip = 537 (by user_id)
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	

3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:
	
	SELECT column_name AS x
	FROM user
	WHERE x IS NULL;
	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5 		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0	max: 5.0	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995
		
5. List the cities with the most reviews in descending order:

SQL code used to arrive at answer:

SELECT city, SUM(review_count) AS 'num_of_reviews'
FROM business
GROUP BY city
ORDER BY num_of_reviews DESC;
	
Copy and Paste the Result Below:
+-----------------+----------------+
| city            | num_of_reviews |
+-----------------+----------------+
| Las Vegas       |          82854 |
| Phoenix         |          34503 |
| Toronto         |          24113 |
| Scottsdale      |          20614 |
| Charlotte       |          12523 |
| Henderson       |          10871 |
| Tempe           |          10504 |
| Pittsburgh      |           9798 |
| Montréal        |           9448 |
| Chandler        |           8112 |
| Mesa            |           6875 |
| Gilbert         |           6380 |
| Cleveland       |           5593 |
| Madison         |           5265 |
| Glendale        |           4406 |
| Mississauga     |           3814 |
| Edinburgh       |           2792 |
| Peoria          |           2624 |
| North Las Vegas |           2438 |
| Markham         |           2352 |
| Champaign       |           2029 |
| Stuttgart       |           1849 |
| Surprise        |           1520 |
| Lakewood        |           1465 |
| Goodyear        |           1155 |
+-----------------+----------------+
(Output limit exceeded, 25 of 362 total rows shown)

6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars AS 'Star Rating', COUNT(id) AS 'Count'
FROM business
WHERE city = 'Avon'
GROUP BY stars;

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------------+-------+
| Star Rating | Count |
+-------------+-------+
|         1.5 |     1 |
|         2.5 |     2 |
|         3.5 |     3 |
|         4.0 |     2 |
|         4.5 |     1 |
|         5.0 |     1 |
+-------------+-------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT stars AS 'Star Rating', COUNT(id) AS 'Count'
FROM business
WHERE city = 'Beachwood'
GROUP BY stars;

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------------+-------+
| Star Rating | Count |
+-------------+-------+
|         2.0 |     1 |
|         2.5 |     1 |
|         3.0 |     2 |
|         3.5 |     2 |
|         4.0 |     1 |
|         4.5 |     2 |
|         5.0 |     5 |
+-------------+-------+

7. Find the top 3 users based on their total number of reviews:
		
SQL code used to arrive at answer:

SELECT name, review_count
FROM user
ORDER BY review_count DESC
LIMIT 3;
		
Copy and Paste the Result Below:
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+
		
8. Does posing more reviews correlate with more fans? 

Yes, WITHIN 700 or fewer reviews given, the correlation is clear. 
The more reviews you give, the more fans you get. 

Beyond 700 reviews given, the average increase is not steady. 
This is probably because only a few users reach those levels. Still, 
on average, users who have given more reviews are rewarded by more fans.

Please explain your findings and interpretation of the results:

Here’s the result of the first analysis.
+--------------+---------------+----------------+
| num_of_users | reviews_given |   ave_num_fans |
+--------------+---------------+----------------+
|         9492 | A.0-100       | 0.436788874842 |
|          270 | B.101-200     |  8.93333333333 |
|          107 | C.201-300     |   18.523364486 |
|           57 | D.301-400     |  25.2105263158 |
|           26 | E.401-500     |  31.7692307692 |
|           13 | F.501-600     |  32.8461538462 |
|           14 | G.601-700     |           76.0 |
|            3 | H.701-800     |           58.0 |
|            7 | I.801-900     |  97.5714285714 |
|            3 | J.901-1000    |          236.0 |
|            1 | K.1001-1100   |          104.0 |
|            2 | L.1101-1200   |          163.5 |
|            2 | M.1201-1300   |          113.5 |
|            1 | N.1301-1400   |           76.0 |
|            1 | Q.1601-1700   |           50.0 |
|            1 | T.1901-2000   |          253.0 |
+--------------+---------------+----------------+

The code used is given below. 

SELECT 
    -- Grouping/Binning based on the number of reviews given
    CASE 
        WHEN review_count BETWEEN 0 AND 100 THEN 'A.0-100'
        WHEN review_count > 100 AND review_count <= 200 THEN 'B.101-200'
        WHEN review_count > 200 AND review_count <= 300 THEN 'C.201-300'
        WHEN review_count > 300 AND review_count <= 400 THEN 'D.301-400'
        WHEN review_count > 400 AND review_count <= 500 THEN 'E.401-500'
        WHEN review_count > 500 AND review_count <= 600 THEN 'F.501-600'
        WHEN review_count > 600 AND review_count <= 700 THEN 'G.601-700'
        WHEN review_count > 700 AND review_count <= 800 THEN 'H.701-800'
        WHEN review_count > 800 AND review_count <= 900 THEN 'I.801-900'
        WHEN review_count > 900 AND review_count <= 1000 THEN 'J.901-1000'
        WHEN review_count > 1000 AND review_count <= 1100 THEN 'K.1001-1100'
        WHEN review_count > 1100 AND review_count <= 1200 THEN 'L.1101-1200'
        WHEN review_count > 1200 AND review_count <= 1300 THEN 'M.1201-1300'
        WHEN review_count > 1300 AND review_count <= 1400 THEN 'N.1301-1400'
        WHEN review_count > 1400 AND review_count <= 1500 THEN 'O.1401-1500'
        WHEN review_count > 1500 AND review_count <= 1600 THEN 'P.1501-1600'
        WHEN review_count > 1600 AND review_count <= 1700 THEN 'Q.1601-1700'
        WHEN review_count > 1700 AND review_count <= 1800 THEN 'R.1701-1800'
        WHEN review_count > 1800 AND review_count <= 1900 THEN 'S.1801-1900'
        WHEN review_count > 1900 AND review_count <= 2000 THEN 'T.1901-2000'
    END AS 'reviews_given’,

    -- Average number of fans per group
    AVG(fans) AS 'ave_num_fans'
    
FROM user
GROUP BY reviews_given
ORDER BY reviews_given ASC;

- - - - -

We see from the table above that the great majority of users (9492 out of 
10000 = 94.9%) gave only 100 or fewer reviews. So, it is better to analyze the 
trend within 100 reviews. Here’s the result: 
+---------------+----------------+
| reviews_given |   ave_num_fans |
+---------------+----------------+
| A.0-10        | 0.124849215923 |
| B.11-20       | 0.438314176245 |
| C.21-30       | 0.797909407666 |
| D.31-40       |  1.24844720497 |
| E.41-50       |  1.76767676768 |
| F.51-60       |  2.64028776978 |
| G.61-70       |         2.5625 |
| H.71-80       |  3.76829268293 |
| I.81-90       |            4.2 |
| J.91-100      |   4.7619047619 |
+---------------+----------------+

We can see the correlation between reviews given and the number of fans 
(except for the slight decrease from Group F to G) for the vast majority 
of Yelp users. 

Thus, within 100 or fewer reviews given, the more reviews a Yelp user gives,
the more fans he/she gets, as shown by the average number of fans above.

9. Are there more reviews with the word "love" or with the word "hate" in them?

Answer:
Yes. 
There are 1780 reviews with the word "love" while there are 232 reviews for "hate".
	
SQL code used to arrive at answer:

-- For "love" count:
SELECT COUNT(text)
FROM review
WHERE text LIKE '%love%'; 

-- For "hate" count:
SELECT COUNT(text)
FROM review
WHERE text LIKE '%hate%'; 
	
10. Find the top 10 users with the most fans:

SQL code used to arrive at answer:

SELECT name, fans
FROM user
ORDER BY fans DESC
LIMIT 10;
	
Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
	
Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. 
Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

Chosen city = 'Toronto'
Chosen category = 'Restaurants'
	
i. Do the two groups you chose to analyze have a different distribution of hours?
The two groups we want to analyze are the high-rated (4-5 stars) Toronto restaurants 
and the low-rated (2-3 stars) Toronto restaurants. There are only 8 Toronto restaurants
that have 2-3 and 4-5 stars, as shown below. 
+---------+-------------+------------------+-------------+
| city    | category    | name             | Ratings     |
+---------+-------------+------------------+-------------+
| Toronto | Restaurants | Mama Mia         | High Rating |
| Toronto | Restaurants | Cabin Fever      | High Rating |
| Toronto | Restaurants | Big Smoke Burger | Low Rating  |
| Toronto | Restaurants | Sushi Osaka      | High Rating |
| Toronto | Restaurants | 99 Cent Sushi    | Low Rating  |
| Toronto | Restaurants | Pizzaiolo        | Low Rating  |
| Toronto | Restaurants | Naniwa-Taro      | High Rating |
| Toronto | Restaurants | Edulis           | High Rating |
+---------+-------------+------------------+-------------+
NOTE: High Rating = 4-5 stars (inclusive), Low Rating = 2-3 stars (inclusive)

Now, the hours distribution for the high-rated group is given below.

Output (for High Rating):
+------------------------+-----------------------+-------------+
| Restaurants in Toronto | hours                 | Ratings     |
+------------------------+-----------------------+-------------+
| Cabin Fever            | Monday|16:00-2:00     | High Rating |
| Cabin Fever            | Tuesday|18:00-2:00    | High Rating |
| Cabin Fever            | Friday|18:00-2:00     | High Rating |
| Cabin Fever            | Wednesday|18:00-2:00  | High Rating |
| Cabin Fever            | Thursday|18:00-2:00   | High Rating |
| Cabin Fever            | Sunday|16:00-2:00     | High Rating |
| Cabin Fever            | Saturday|16:00-2:00   | High Rating |
| Sushi Osaka            | Monday|11:00-23:00    | High Rating |
| Sushi Osaka            | Tuesday|11:00-23:00   | High Rating |
| Sushi Osaka            | Friday|11:00-23:00    | High Rating |
| Sushi Osaka            | Wednesday|11:00-23:00 | High Rating |
| Sushi Osaka            | Thursday|11:00-23:00  | High Rating |
| Sushi Osaka            | Sunday|14:00-23:00    | High Rating |
| Sushi Osaka            | Saturday|11:00-23:00  | High Rating |
| Edulis                 | Sunday|12:00-16:00    | High Rating |
| Edulis                 | Friday|18:00-23:00    | High Rating |
| Edulis                 | Wednesday|18:00-23:00 | High Rating |
| Edulis                 | Thursday|18:00-23:00  | High Rating |
| Edulis                 | Saturday|18:00-23:00  | High Rating |
+------------------------+-----------------------+-------------+

Meanwhile, for the low-rated group:

Output (for Low Rating):
+------------------------+-----------------------+------------+
| Restaurants in Toronto | hours                 | Ratings    |
+------------------------+-----------------------+------------+
| Big Smoke Burger       | Monday|10:30-21:00    | Low Rating |
| Big Smoke Burger       | Tuesday|10:30-21:00   | Low Rating |
| Big Smoke Burger       | Friday|10:30-21:00    | Low Rating |
| Big Smoke Burger       | Wednesday|10:30-21:00 | Low Rating |
| Big Smoke Burger       | Thursday|10:30-21:00  | Low Rating |
| Big Smoke Burger       | Sunday|11:00-19:00    | Low Rating |
| Big Smoke Burger       | Saturday|10:30-21:00  | Low Rating |
| 99 Cent Sushi          | Monday|11:00-23:00    | Low Rating |
| 99 Cent Sushi          | Tuesday|11:00-23:00   | Low Rating |
| 99 Cent Sushi          | Friday|11:00-23:00    | Low Rating |
| 99 Cent Sushi          | Wednesday|11:00-23:00 | Low Rating |
| 99 Cent Sushi          | Thursday|11:00-23:00  | Low Rating |
| 99 Cent Sushi          | Sunday|11:00-23:00    | Low Rating |
| 99 Cent Sushi          | Saturday|11:00-23:00  | Low Rating |
| Pizzaiolo              | Monday|9:00-23:00     | Low Rating |
| Pizzaiolo              | Tuesday|9:00-23:00    | Low Rating |
| Pizzaiolo              | Friday|9:00-4:00      | Low Rating |
| Pizzaiolo              | Wednesday|9:00-23:00  | Low Rating |
| Pizzaiolo              | Thursday|9:00-23:00   | Low Rating |
| Pizzaiolo              | Sunday|10:00-23:00    | Low Rating |
| Pizzaiolo              | Saturday|10:00-4:00   | Low Rating |
+------------------------+-----------------------+------------+

ANSWER TO THE QUESTION: Comparing the high-rated and low-rated restaurants in Toronto, 
high-rated group tend to OPEN LATER than the low-rated group during the day. 
Although both groups close roughly around the same time. 

ii. Do the two groups you chose to analyze have a different number of reviews?
The average number of reviews for each group is given below. 
+----------------------------------------+-------------+
| Ave_Num_of_Reviews_Toronto_Restaurants | Ratings     |
+----------------------------------------+-------------+
|                                   41.2 | High Rating |
|                          28.6666666667 | Low Rating  |
+----------------------------------------+-------------+

ANSWER TO THE QUESTION: 
We can see that the high-rated group tend to receive more reviews than the low-rated group.

iii. Are you able to infer anything from the location data provided between these two groups? Explain.
The only location clues from the business table is the neighborhood column. 
(The state won't help since the state (Canada) is the same for each Toronto restaurant.
The output for neighborhood details is given below. 
+------------------------+------------------------+-------------+
| Restaurants in Toronto | neighborhood           | Ratings     |
+------------------------+------------------------+-------------+
| Mama Mia               |                        | High Rating |
| Cabin Fever            | High Park              | High Rating |
| Sushi Osaka            | Etobicoke              | High Rating |
| Naniwa-Taro            | Willowdale             | High Rating |
| Edulis                 | Niagara                | High Rating |
| Big Smoke Burger       | Downtown Core          | Low Rating  |
| 99 Cent Sushi          | Downtown Core          | Low Rating  |
| Pizzaiolo              | Entertainment District | Low Rating  |
+------------------------+------------------------+-------------+

ANSWER TO THE QUESTION:
There is nothing to infer here since we cannot say whether the neighborhood 
is a factor for their rating. A quick Google search provides the realization 
that each neighborhood is a lively place with lots of people. So, given our 
limited information, we cannot conclude anything about the neighborhood as a 
factor for a Toronto restaurant to be high-rated or low-rated.

-- SQL code used for analysis:

-- QUESTION i. 1st table:

SELECT b.city, c.category, b.name,
    -- Categorizing based on specified stars
    CASE
        WHEN b.stars BETWEEN 2 AND 3 THEN 'Low Rating'
        WHEN b.stars BETWEEN 4 AND 5 THEN 'High Rating'
    END AS Ratings

-- Joining the business and category tables
FROM business b INNER JOIN category c 
ON b.id = c.business_id

-- Conditions for filtering and sorting
WHERE Ratings IS NOT NULL AND b.city = 'Toronto' AND c.category = 'Restaurants'
ORDER BY c.category;

-- QUESTION i. 2nd table: 

SELECT b.name AS 'Restaurants in Toronto', h.hours,
    -- Categorizing based on specified stars
    CASE
        WHEN b.stars BETWEEN 2 AND 3 THEN 'Low Rating'
        WHEN b.stars BETWEEN 4 AND 5 THEN 'High Rating'
    END AS Ratings

-- Joining the business and category tables
FROM (business b INNER JOIN category c) INNER JOIN hours h
ON b.id = c.business_id AND b.id = h.business_id

-- Conditions for filtering and sorting
WHERE Ratings IS NOT NULL AND c.category = 'Restaurants' AND 
    b.city = 'Toronto' AND Ratings = 'High Rating';

-- QUESTION i. 3rd table:

SELECT b.name AS 'Restaurants in Toronto', h.hours,
    -- Categorizing based on specified stars
    CASE
        WHEN b.stars BETWEEN 2 AND 3 THEN 'Low Rating'
        WHEN b.stars BETWEEN 4 AND 5 THEN 'High Rating'
    END AS Ratings

-- Joining the business and category tables
FROM (business b INNER JOIN category c) INNER JOIN hours h
ON b.id = c.business_id AND b.id = h.business_id

-- Conditions for filtering and sorting
WHERE Ratings IS NOT NULL AND c.category = 'Restaurants' AND 
    b.city = 'Toronto' AND Ratings = 'Low Rating';

-- QUESTION ii. 

SELECT b.name AS 'Restaurants in Toronto', review_count,
    -- Categorizing based on specified stars
    CASE
        WHEN b.stars BETWEEN 2 AND 3 THEN 'Low Rating'
        WHEN b.stars BETWEEN 4 AND 5 THEN 'High Rating'
    END AS Ratings

-- Joining the business and category tables
FROM business b INNER JOIN category c 
ON b.id = c.business_id

-- Conditions for filtering and sorting
WHERE Ratings IS NOT NULL AND c.category = 'Restaurants' AND b.city = 'Toronto'
ORDER BY Ratings;

-- QUESTION iii. 

SELECT b.name AS 'Restaurants in Toronto', neighborhood,
    -- Categorizing based on specified stars
    CASE
        WHEN b.stars BETWEEN 2 AND 3 THEN 'Low Rating'
        WHEN b.stars BETWEEN 4 AND 5 THEN 'High Rating'
    END AS Ratings

-- Joining the business and category tables
FROM business b INNER JOIN category c 
ON b.id = c.business_id

-- Conditions for filtering and sorting
WHERE Ratings IS NOT NULL AND c.category = 'Restaurants' AND b.city = 'Toronto'
ORDER BY Ratings;
		
2. Group business based on the ones that are open and the ones that are closed. 
What differences can you find between the ones that are still open and the ones that are closed? 
List at least two differences and the SQL code you used to arrive at your answer.
		
+---------+----------------+-------------------+
| is_open | Num_Businesses | AVG(review_count) |
+---------+----------------+-------------------+
|       0 |           1520 |     23.1980263158 |
|       1 |           8480 |     31.7570754717 |
+---------+----------------+-------------------+

i. Difference 1:
In the Yelp database, there are more businesses that are open than businesses that are closed.
         
ii. Difference 2:
In the Yelp database, closed businesses received more reviews than open businesses. 

SQL code used for analysis:

SELECT 
  is_open, 
  COUNT(name) AS 'Num_Businesses', 
  AVG(review_count)
FROM business 
WHERE name IS NOT NULL
GROUP BY is_open; 
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

Predicting the overall star rating for a business
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

It makes sense that the overall rating is based on the quality of service. 
But we do not have any information specific to that.
However, we can use the review_count column, with the assumption that businesses with nice service tend to receive more reviews.
We can also use the text column from the review table. 
Specifically, we can test whether reviews with words "hate" and "love" are good predictors of overall rating. 
Lastly, we need the stars column from the business table to verify or disconfirm our hypotheses.            
                  
iii. Output of your finished dataset:
+----------------------------------------+-----------------+--------------+------------------+
| name                                   | review_count_IV | sentiment_IV | overall_stars_DV |
+----------------------------------------+-----------------+--------------+------------------+
| 4E Kennels                             |              24 | loved        |              5.0 |
| Alfred Angelo Bridal                   |              58 | loved        |              4.0 |
| Angelo's Pizza                         |             377 | loved        |              4.0 |
| AquaKnox                               |             423 | loved        |              4.0 |
| Au 14 Ouest Prince Arthur              |               4 | loved        |              5.0 |
| Au Kouign-Amann                        |             291 | loved        |              4.5 |
| AutoNation Nissan Tempe                |             157 | loved        |              3.0 |
| Avis                                   |               6 | hated        |              2.5 |
| Babe's Cabaret                         |              16 | hated        |              3.0 |
| Balance Hormone Center                 |               9 | loved        |              4.0 |
| Beaver Choice                          |             326 | loved        |              4.0 |
| Benkovitz Seafoods                     |              20 | loved        |              4.5 |
| Boba Tea House                         |             295 | loved        |              4.0 |
| Bootleggers Modern American Smokehouse |             431 | hated        |              4.0 |
| Bootleggers Modern American Smokehouse |             431 | loved        |              4.0 |
| Braddah's Island Style                 |             566 | loved        |              4.0 |
| Budget Rent A Car                      |               7 | hated        |              2.0 |
| Cabo's Cantina and Grill               |              24 | loved        |              3.5 |
| Camp Bow Wow Avondale                  |              79 | loved        |              5.0 |
| Capriotti's Sandwich Shop              |              57 | loved        |              3.0 |
| Cho Sun Ok                             |             195 | loved        |              4.0 |
| D & D Discount Motorcycles             |              11 | loved        |              5.0 |
| Delmonico Steakhouse                   |            1389 | hated        |              4.0 |
| Diablo's Cantina                       |            1084 | loved        |              3.0 |
| Dreamy Draw Recreation Area            |              45 | loved        |              4.0 |
+----------------------------------------+-----------------+--------------+------------------+
(Output limit exceeded, 25 of 140 total rows shown) 
         
iv. Provide the SQL code you used to create your final dataset:

SELECT 
    b.name, b.review_count AS 'review_count_IV', 

    -- Classifying businesses that received reviews with terms "love" and "hate"
    CASE 
        WHEN r.text LIKE '%hate%' THEN 'hated'
        WHEN r.text LIKE '%love%' THEN 'loved'
    END AS 'sentiment_IV',
    b.stars AS 'overall_stars_DV'

-- Joining the business table and review table
FROM business b INNER JOIN review r 
ON b.id = r.business_id

-- Reviews WITHOUT the terms "hate" and "love" are ignored
WHERE sentiment_IV IS NOT NULL

-- Sorting
ORDER BY name;
